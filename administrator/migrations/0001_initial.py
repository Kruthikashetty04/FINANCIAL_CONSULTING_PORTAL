# Generated by Django 5.1.6 on 2025-05-01 14:15

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Blogs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blogs_author', models.CharField(blank=True, max_length=255, null=True, verbose_name='Author')),
                ('title', models.CharField(max_length=100, verbose_name='Blog Title')),
                ('blogs_description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('sub_title1', models.CharField(default='', max_length=100, verbose_name='Subtitle 1')),
                ('sub_description1', models.TextField(blank=True, null=True, verbose_name='Sub-description 1')),
                ('blogs_thumbnail', models.ImageField(blank=True, null=True, upload_to='thumbnail_blogs/', verbose_name='Thumbnail')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Event Name')),
                ('event_host', models.CharField(blank=True, max_length=50, null=True, verbose_name='Host')),
                ('event_date', models.DateField(verbose_name='Date')),
                ('event_time', models.TimeField(verbose_name='Time')),
                ('event_description', models.CharField(blank=True, max_length=255, null=True, verbose_name='Description')),
                ('event_link', models.URLField(blank=True, null=True, verbose_name='Event Link')),
                ('event_thumbnail', models.ImageField(blank=True, null=True, upload_to='thumbnail_event/', verbose_name='Thumbnail')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active Status')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('message', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Training',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('training_name', models.CharField(max_length=100, verbose_name='Training Name')),
                ('training_description', models.TextField(verbose_name='Description')),
                ('training_date', models.DateField(verbose_name='Date')),
                ('training_video', models.FileField(blank=True, null=True, upload_to='training_videos/', verbose_name='Training Video')),
                ('training_thumbnail', models.ImageField(blank=True, null=True, upload_to='training_thumbnails/', verbose_name='Thumbnail')),
            ],
        ),
        migrations.CreateModel(
            name='VideoGallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_title', models.CharField(max_length=150, verbose_name='Video Title')),
                ('video_description', models.TextField(default='', verbose_name='Video Description')),
                ('video', models.FileField(blank=True, null=True, upload_to='gallery_video/', verbose_name='Video File')),
                ('video_thumbnail', models.ImageField(blank=True, null=True, upload_to='gallery_thumbnail/', verbose_name='Video Thumbnail')),
                ('uploaded_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Uploaded At')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('age', models.IntegerField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=10, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=15, null=True)),
                ('aadhaar_number', models.CharField(blank=True, max_length=12, null=True, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='EventRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registered_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('event_datetime', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registrations', to='administrator.event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MemberProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aadhaar', models.CharField(max_length=12, unique=True)),
                ('age', models.PositiveIntegerField()),
                ('contact_number', models.CharField(max_length=15, unique=True)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=10)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Active', max_length=10)),
                ('has_paid', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
